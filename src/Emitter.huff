 /** 
 *  EMITTER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function value(uint256, uint256) payable returns()
 
#define event Value(uint256 indexed, uint256)

#define macro MAIN() = takes(0) returns(0) {
    // get 4 first bytes
    0x00 calldataload
    0xe0 shr

    // value(uint256, uint256)
    __FUNC_SIG(value)
    eq valueLabel jumpi

    // else revert
    0x00 0x00 revert

    valueLabel:
        0x04 calldataload
        __EVENT_HASH(Value)
        0x00 0x00
        log2
}
